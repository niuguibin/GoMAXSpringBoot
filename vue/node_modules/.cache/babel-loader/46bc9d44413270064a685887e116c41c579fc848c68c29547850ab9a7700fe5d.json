{"ast":null,"code":"export default {\n  name: \"Lifecycle\",\n  data() {\n    return {\n      str: '123'\n    };\n  },\n  //生命周期函数:在某个时刻会自动执行的函数\n  //1.当页面挂载的时候，前四个生命周期函数会被执行 (beforeCreate,created,beforeMount,mounted)\n  //2.哪个阶段有$el和$data\n  //3.加入keep-alive会多两个生命周期(activated[进入],deactivated[离开])\n\n  //Vue组件(实例)创建完成之前就会执行\n  beforeCreate() {\n    //beforeCreate这个阶段不会挂载el和data\n    console.log('beforeCreate', this.$el, this.$data);\n  },\n  //Vue组件(实例)创建完毕之就会执行\n  created() {\n    //created这个阶段会挂载data，不会挂载el\n    console.log('created', this.$el, this.$data);\n  },\n  //<template>模板渲染到页面之前会执行\n  beforeMount() {\n    //created这个阶段会挂载data，不会挂载el\n    console.log('beforeMount', this.$el, this.$data);\n  },\n  //<template>模板渲染到页面完毕之后会执行,页面上就可以看到内容了\n  mounted() {\n    //mounted这个阶段会挂载data也会挂载el\n    console.log('mounted', this.$el, this.$data);\n  },\n  //当data数据发生改变时，则会执行\n  beforeUpdate() {\n    const content = document.getElementById('app').innerHTML;\n    console.log('beforeUpdate', content);\n  },\n  //当data数据发生改变时调用，但是页面内容还未发生改变\n  updated() {\n    //updated这个阶段会挂载data也会挂载el\n    const content = document.getElementById('app').innerHTML;\n    console.log('updated', content);\n  },\n  //当data数据发生改变时调用，\n  beforeDestroy() {\n    console.log('beforeDestroy');\n  },\n  destroyed() {\n    //destroyed这个阶段会挂载data也会挂载el\n    console.log('destroyed');\n  }\n};","map":{"version":3,"names":["name","data","str","beforeCreate","console","log","$el","$data","created","beforeMount","mounted","beforeUpdate","content","document","getElementById","innerHTML","updated","beforeDestroy","destroyed"],"sources":["src/views/manager/Lifecycle.vue"],"sourcesContent":["<template>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Lifecycle\",\r\n  data(){\r\n    return{\r\n      str:'123'\r\n    }\r\n  },\r\n  //生命周期函数:在某个时刻会自动执行的函数\r\n  //1.当页面挂载的时候，前四个生命周期函数会被执行 (beforeCreate,created,beforeMount,mounted)\r\n  //2.哪个阶段有$el和$data\r\n  //3.加入keep-alive会多两个生命周期(activated[进入],deactivated[离开])\r\n\r\n\r\n  //Vue组件(实例)创建完成之前就会执行\r\n  beforeCreate(){//beforeCreate这个阶段不会挂载el和data\r\n    console.log('beforeCreate',this.$el, this.$data)\r\n  },\r\n\r\n\r\n  //Vue组件(实例)创建完毕之就会执行\r\n  created(){//created这个阶段会挂载data，不会挂载el\r\n    console.log('created',this.$el, this.$data)\r\n  },\r\n\r\n\r\n  //<template>模板渲染到页面之前会执行\r\n  beforeMount(){//created这个阶段会挂载data，不会挂载el\r\n    console.log('beforeMount',this.$el, this.$data)\r\n  },\r\n\r\n\r\n  //<template>模板渲染到页面完毕之后会执行,页面上就可以看到内容了\r\n  mounted(){//mounted这个阶段会挂载data也会挂载el\r\n    console.log('mounted',this.$el, this.$data)\r\n  },\r\n\r\n  //当data数据发生改变时，则会执行\r\n  beforeUpdate(){\r\n    const content = document.getElementById('app').innerHTML\r\n    console.log('beforeUpdate',content)\r\n  },\r\n\r\n\r\n  //当data数据发生改变时调用，但是页面内容还未发生改变\r\n  updated(){//updated这个阶段会挂载data也会挂载el\r\n    const content = document.getElementById('app').innerHTML\r\n    console.log('updated',content)\r\n  },\r\n\r\n\r\n  //当data数据发生改变时调用，\r\n  beforeDestroy(){\r\n    console.log('beforeDestroy')\r\n  },\r\n\r\n\r\n  destroyed(){//destroyed这个阶段会挂载data也会挂载el\r\n    console.log('destroyed')\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAKA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,GAAA;IACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACAC,aAAA;IAAA;IACAC,OAAA,CAAAC,GAAA,sBAAAC,GAAA,OAAAC,KAAA;EACA;EAGA;EACAC,QAAA;IAAA;IACAJ,OAAA,CAAAC,GAAA,iBAAAC,GAAA,OAAAC,KAAA;EACA;EAGA;EACAE,YAAA;IAAA;IACAL,OAAA,CAAAC,GAAA,qBAAAC,GAAA,OAAAC,KAAA;EACA;EAGA;EACAG,QAAA;IAAA;IACAN,OAAA,CAAAC,GAAA,iBAAAC,GAAA,OAAAC,KAAA;EACA;EAEA;EACAI,aAAA;IACA,MAAAC,OAAA,GAAAC,QAAA,CAAAC,cAAA,QAAAC,SAAA;IACAX,OAAA,CAAAC,GAAA,iBAAAO,OAAA;EACA;EAGA;EACAI,QAAA;IAAA;IACA,MAAAJ,OAAA,GAAAC,QAAA,CAAAC,cAAA,QAAAC,SAAA;IACAX,OAAA,CAAAC,GAAA,YAAAO,OAAA;EACA;EAGA;EACAK,cAAA;IACAb,OAAA,CAAAC,GAAA;EACA;EAGAa,UAAA;IAAA;IACAd,OAAA,CAAAC,GAAA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}